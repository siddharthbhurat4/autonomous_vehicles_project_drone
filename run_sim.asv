clear;
close all;
%s0 = ones(12,1);   % state initial conditions
s0 = [0;6;0;0;0;0;0;0;0;0;0;0];
%s0 = [0;2;0;0;0;0;0;0;0;0;0;-2];
%s0 = [0;0;0;0;0;0;0;0;0;0;0;0];


max_time = 8;             % time horizon (sec)
tstep    = 0.01; % this determines the time step at which the solution is given
cstep    = 0.05; % image capture time interval
max_iter = max_time/cstep; % max iteration
nstep    = cstep/tstep;
time     = 0; % current time
curr_state = s0;

s_save = [];

load('waypoints_file.mat');
trajectory = waypoint_gen(waypoints_checkpoint2);
current_traj_idx = 1;

for iter = 1:max_iter
    tspan = time:tstep:time+cstep;
    s_nom = trajectory(current_traj_idx,:);
    [t s] = ode45(@(t,s) eom(t,s, s_nom),tspan,curr_state);
    curr_state    = s(end, :)';
    time = time + cstep;
    s_save = [s_save; s];

    if 
end

%tspan = [0 T];

%[t s] = ode45(@eom,tspan,s0);

% figure(1)
% p=plot(t,s,'LineWidth',1);
% p(1).LineStyle = '--'; 
% p(2).LineStyle = '--';
% p(3).LineStyle = '--';
% p(7).LineStyle = '-.';
% p(8).LineStyle = '-.';
% p(9).LineStyle = '-.';
% legend('x','y','z','$\phi$','$\theta$','$\psi$','$\dot{x}$','$\dot{y}$','$\dot{z}$','$\dot{\phi}$','$\dot{\theta}$','$\dot{\psi}$','Interpreter','latex','Fontsize',12)
% 

figure(2)
positions = s(:,1:3);
angles = s(:,7:9);
animate(positions,angles);